# set -ag terminal-overrides ",alacritty:RGB"
# set shell set -g default-shell /bin/zsh
set -g default-terminal "xterm-256color"
set-option -g status-position top
# unbind default prefix and set it to ctrl-a


# Emulate scrolling by sending up and down keys if these commands are running in the pane
tmux_commands_with_legacy_scroll="nano less more man git"

set -g mouse on
# to enable mouse scroll, see https://github.com/tmux/tmux/issues/145#issuecomment-150736967
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
# set -g @bmm-scroll-mode-copy 'on'

bind-key -T root WheelUpPane \
	if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
	if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Down" "send -Mt="'



unbind d
unbind C-b
# unbind C-Space
# set -g prefix C-Space
unbind Escape
set -g prefix Escape
bind-key Escape send-prefix

bind \` switch-client -t'{marked}'

bind k killp

# make delay shorter
set -sg escape-time 0


#### key bindings ####
# window management
# unbind &
# bind-key -n

bind-key -n C-Right next-window
bind-key -n C-Left  select-window -t -1

# bind-key -n C-S-Right select-window -t +1
# bind-key -n C-S-Left  select-window -t -1


# bind t new-window
bind k kill-window
bind p rename-window '#{b:pane_current_path}'
set -g renumber-windows on # eliminate slack indices after deleting windows
bind "\\" split-window -hc "#{pane_current_path}"
bind - split-window -vc "#{pane_current_path}"
bind Space last-window # toggle to previous window
bind o new-window
# pane management
unbind x
unbind t
bind t new-window -c "#{pane_current_path}"
bind x kill-pane
bind j choose-window 'join-pane -h -s "%%"'
bind J choose-window 'join-pane -s "%%"'
# bind-key h split-window -h "vim ~/scratch/notes.md" # new pane with file in vim

# reload config file
bind r source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"
# bind -n A-r source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"
# bind -n A-, run 'hx ~/.tmux.conf'

# quickly open a new window
bind N new-window

# synchronize all panes in a window
# bind y setw synchronize-panes

# unbind p
# bind p split-window -hc "#{pane_current_path}" \; select-pane -L \; kill-pane

#### copy mode : vim ####

# start selection with 'space' and copy using 'y'
# bind -t vi-copy 'y' copy-selection
setw -g mode-keys vi

# paste using 'p'
# unbind p
# bind p paste-buffer

bind -n C-S-Left swap-window -d -t -1
bind -n C-S-Right swap-window -d -t +1
# bind -r "<" swap-window -d -t -1
# bind -r ">" swap-window -d -t +1

# # copying
# bind C-c run "tmux save-buffer - | xclip -i -selection clipboard"
# bind C-v run 'tmux set-buffer "$(xclip -o -selection clipboard)" && tmux paste-buffer'











# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set-window-option -g mouse on

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run "$HOME/.tmux/plugins/tpm/tpm"
run '~/gitclone/clones/tmux-plugins/tpm/tpm'
